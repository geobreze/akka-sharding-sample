akka {
  loglevel = DEBUG

  actor {
    provider = cluster

    serialization-bindings {
      "sample.devices.CborSerializable" = jackson-cbor
    }
  }

  # For the sample, just bind to loopback and do not allow access from the network
  # the port is overridden by the logic in main class
  remote.artery {
    canonical.port = 0
    canonical.hostname = 127.0.0.1
  }

  cluster {
    seed-nodes = [
      "akka://DeviceSim@127.0.0.1:2553",
      "akka://DeviceSim@127.0.0.1:2554"]

    sharding {
      number-of-shards = 100
      remember-entities = true
      remember-entities-store = eventsourced
    }

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

      persistence {
        journal {
          plugin = "jdbc-journal"
          auto-start-journals = ["jdbc-journal"]
        }
        snapshot-store {
          plugin = "jdbc-snapshot-store"
          auto-start-snapshot-stores = ["jdbc-snapshot-store"]
        }
      }
}

devices {
  routes.ask-timeout = 60s
}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

# the akka-persistence-jdbc provider in use for durable state store
jdbc-durable-state-store {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "localhost"
    host = ${?DB_HOST}
    url = "jdbc:postgresql://"${slick.db.host}":5432/test?reWriteBatchedInserts=true"
    user = "postgres"
    password = "admin"
    driver = "org.postgresql.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}